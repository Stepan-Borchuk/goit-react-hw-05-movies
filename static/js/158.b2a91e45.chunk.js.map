{"version":3,"file":"static/js/158.b2a91e45.chunk.js","mappings":"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","sources":["components/MoviesList/MovieItem.styled.js","components/MoviesList/MovieItem.jsx","components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.jsx","pages/Movies.styled.js","pages/Movies.jsx","service/fetchAPI.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled( Link )\n`\n  margin: ${p => p.theme.space[0]}px;\n  padding-left: ${p => p.theme.space[2]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.text};\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const MovieImg = styled.img `\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const ItemMovie = styled.li `\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n","import { MovieLink, MovieImg, ItemMovie } from './MovieItem.styled';\nimport PropTypes from 'prop-types';\n\nconst imagesBaseUrl = 'https://image.tmdb.org/t/p/w500';\nconst defaultImg =\n  'https://png.pngtree.com/thumb_back/fw800/back_our/20190621/ourmid/pngtree-fashion-movie-film-theme-background-poster-image_196478.jpg';\n\nconst MovieItem = ({ id, title, path }) => {\n  const poster = `${imagesBaseUrl}${path}`;\n\n  return (\n    <>\n      <ItemMovie>\n        <MovieLink to={`/movies/${id}`}>\n          <h3>{title}</h3>\n          <MovieImg src={path ? poster : defaultImg} alt={title} />\n        </MovieLink>\n      </ItemMovie>\n    </>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul `\n  padding-left: ${p => p.theme.space[0]}px;\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: ${p => p.theme.space[4]}px;\n\n  margin-bottom: ${p => p.theme.space[0]}px;\n\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import MovieItem from './MovieItem';\nimport PropTypes from 'prop-types';\nimport { List } from './MovieList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(({ id, original_title, poster_path }) => {\n        return (\n          <MovieItem\n            key={id}\n            title={original_title}\n            id={id}\n            path={poster_path}\n          />\n        );\n      })}\n    </List>\n  );\n};\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const SearchForm = styled( Form )\n`\n  margin-left: ${p => p.theme.space[3]}px;\n`;\n\nexport const Input = styled( Field )\n`\n  margin-right: ${p => p.theme.space[3]}px;\n  width: ${p => p.theme.space[8]}px;\n  height: ${p => p.theme.space[5]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  :hover,\n  :focus {\n    border: ${p => p.theme.borders.normal} ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const SearchBtn = styled.button `\n  height: ${p => p.theme.space[5]}px;\n  padding: ${p => p.theme.space[2]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  :hover,\n  :focus {\n    border: ${p => p.theme.borders.normal} ${p => p.theme.colors.accent};\n    background-color: ${p => p.theme.colors.white};\n    font-weight: ${p => p.theme.fontWeights.bold};\n  }\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useState, useEffect } from 'react';\nimport { MoviesList } from '../components/MoviesList/MoviesList';\nimport { SearchForm, Input, SearchBtn } from '../pages/Movies.styled';\nimport { fetchMovies } from '../service/fetchAPI';\nimport { Formik } from 'formik';\n\nconst MoviesPageRender = () => {\n  const [movies, setMovies] = useState([]);\n  const [searhParams, setSearchParams] = useSearchParams();\n  const query = searhParams.get('query') ?? '';\n\n  useEffect(() => {\n    async function getMovies(query) {\n      try {\n        const data = await fetchMovies(`/search/movie?query=${query}`);\n        if (!data.results.length) {\n          throw new Error('No results found');\n        }\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n        toast.error('No results found', { duration: 3000 });\n      }\n    }\n\n    if (query === '') {\n      return;\n    }\n\n    getMovies(query);\n  }, [query]);\n\n  return (\n    <>\n      <Formik\n        initialValues={{ query: '' }}\n        onSubmit={({ query }, { resetForm }) => {\n          setSearchParams({ query });\n          resetForm();\n        }}\n      >\n        <SearchForm>\n          <Input name=\"query\" type=\"text\" placeholder=\"Search movies\" />\n          <SearchBtn type=\"submit\">Search</SearchBtn>\n        </SearchForm>\n      </Formik>\n      {Object.keys(movies).length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default MoviesPageRender;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'fb3b1d607bdb2048b1877f4514177cf6';\naxios.defaults.params = { api_key: API_KEY };\n\nexport const fetchMovies = async fetchParameter => {\n    try {\n        const response = await axios.get( fetchParameter );\n        return response.data;\n    } catch ( error ) {\n        console.log( error.message );\n    }\n};\n"],"names":["MovieLink","styled","Link","p","theme","space","colors","text","fontSizes","m","fontWeights","normal","accent","MovieImg","ItemMovie","id","title","path","poster","to","src","alt","List","MoviesList","movies","map","original_title","poster_path","SearchForm","Form","Input","Field","radii","borders","SearchBtn","white","bold","useState","setMovies","useSearchParams","searhParams","setSearchParams","query","get","useEffect","fetchMovies","data","results","length","Error","console","log","toast","duration","getMovies","initialValues","onSubmit","resetForm","name","type","placeholder","Object","keys","axios","api_key","fetchParameter","response","message"],"sourceRoot":""}
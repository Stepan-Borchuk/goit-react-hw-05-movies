{"version":3,"file":"static/js/415.04fcbe4c.chunk.js","mappings":"+MAGaA,GAAYC,EAAAA,EAAAA,IAAQC,EAAAA,GAARD,CAAH,gMAEV,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACK,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAER,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,IAAnB,IACG,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,UAAUC,CAAtB,IACC,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,MAAxB,IAGL,SAAAR,GAAC,OAAIA,EAAEC,MAAME,OAAOM,MAAnB,IAIDC,EAAWZ,EAAAA,GAAAA,IAAH,mNAYRa,EAAYb,EAAAA,GAAAA,GAAH,kL,SCPtB,EAfkB,SAAC,GAAyB,IAAvBc,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACxBC,EAAM,UALQ,mCAKR,OAAsBD,GAElC,OACE,+BACE,SAACH,EAAD,WACE,UAACd,EAAD,CAAWmB,GAAE,kBAAaJ,GAA1B,WACE,wBAAKC,KACL,SAACH,EAAD,CAAUO,IAAKH,EAAOC,EAV9B,wIAUmDG,IAAKL,UAKzD,EClBYM,EAAOrB,EAAAA,GAAAA,GAAH,wRACC,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAIL,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEI,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,ICLPkB,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACE,SAACF,EAAD,UACGE,EAAOC,KAAI,YAA0C,IAAvCV,EAAsC,EAAtCA,GAAIW,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YACjC,OACE,SAAC,EAAD,CAEEX,MAAOU,EACPX,GAAIA,EACJE,KAAMU,GAHDZ,EAMV,KAGN,C,mICUKa,EAAQ3B,EAAAA,GAAAA,GAAH,2HACC,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEF,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOM,MAAnB,IACG,SAAAT,GAAC,OAAIA,EAAEC,MAAMI,UAAUC,CAAtB,IACC,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYmB,IAAxB,IAGlB,UAhCuB,WACrB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAON,EAAP,KAAeO,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAEuBC,EAAAA,EAAAA,GAAY,uBAFnC,OAEUC,EAFV,OAGYC,EAAYD,EAAZC,QACRJ,EAAUI,GAJd,gDAMIC,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,KAGD,iCACE,SAACV,EAAD,6BACCJ,IAAU,SAAC,IAAD,CAAYA,OAAQA,MAGpC,C,0GCzBDe,IAAAA,SAAAA,QAAyB,+BAEzBA,IAAAA,SAAAA,OAAwB,CAAEC,QADV,oCAGT,IAAMP,EAAW,mCAAG,WAAMQ,GAAN,gGAEIF,IAAAA,IAAWE,GAFf,cAEbC,EAFa,yBAGZA,EAASR,MAHG,gCAKnBE,QAAQC,IAAK,KAAMM,SALA,yDAAH,qD","sources":["components/MoviesList/MovieItem.styled.js","components/MoviesList/MovieItem.jsx","components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home.jsx","service/fetchAPI.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled( Link )\n`\n  margin: ${p => p.theme.space[0]}px;\n  padding-left: ${p => p.theme.space[2]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.text};\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const MovieImg = styled.img `\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const ItemMovie = styled.li `\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n","import { MovieLink, MovieImg, ItemMovie } from './MovieItem.styled';\nimport PropTypes from 'prop-types';\n\nconst imagesBaseUrl = 'https://image.tmdb.org/t/p/w500';\nconst defaultImg =\n  'https://png.pngtree.com/thumb_back/fw800/back_our/20190621/ourmid/pngtree-fashion-movie-film-theme-background-poster-image_196478.jpg';\n\nconst MovieItem = ({ id, title, path }) => {\n  const poster = `${imagesBaseUrl}${path}`;\n\n  return (\n    <>\n      <ItemMovie>\n        <MovieLink to={`/movies/${id}`}>\n          <h3>{title}</h3>\n          <MovieImg src={path ? poster : defaultImg} alt={title} />\n        </MovieLink>\n      </ItemMovie>\n    </>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul `\n  padding-left: ${p => p.theme.space[0]}px;\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: ${p => p.theme.space[4]}px;\n\n  margin-bottom: ${p => p.theme.space[0]}px;\n\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import MovieItem from './MovieItem';\nimport PropTypes from 'prop-types';\nimport { List } from './MovieList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(({ id, original_title, poster_path }) => {\n        return (\n          <MovieItem\n            key={id}\n            title={original_title}\n            id={id}\n            path={poster_path}\n          />\n        );\n      })}\n    </List>\n  );\n};\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { MoviesList } from '../components/MoviesList/MoviesList';\nimport styled from 'styled-components';\nimport { fetchMovies } from '../service/fetchAPI';\n\nconst HomePageRender = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function getTrandingMovies() {\n      try {\n        const data = await fetchMovies(`/trending/movie/day`);\n        const { results } = data;\n        setMovies(results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getTrandingMovies();\n  }, []);\n\n  return (\n    <>\n      <Title>Trending Today</Title>\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nconst Title = styled.h2`\n  margin: ${p => p.theme.space[4]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.accent};\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport default HomePageRender;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'fb3b1d607bdb2048b1877f4514177cf6';\naxios.defaults.params = { api_key: API_KEY };\n\nexport const fetchMovies = async fetchParameter => {\n    try {\n        const response = await axios.get( fetchParameter );\n        return response.data;\n    } catch ( error ) {\n        console.log( error.message );\n    }\n};\n"],"names":["MovieLink","styled","Link","p","theme","space","colors","text","fontSizes","m","fontWeights","normal","accent","MovieImg","ItemMovie","id","title","path","poster","to","src","alt","List","MoviesList","movies","map","original_title","poster_path","Title","bold","useState","setMovies","useEffect","fetchMovies","data","results","console","log","getTrandingMovies","axios","api_key","fetchParameter","response","message"],"sourceRoot":""}